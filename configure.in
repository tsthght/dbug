
dnl Devlopers, please strive to achieve this order:
dnl
dnl 0. Initialization and options processing
dnl 1. Programs
dnl 2. Libraries
dnl 3. Header files
dnl 4. Types
dnl 5. Structures
dnl 6. Compiler characteristics
dnl 7. Functions, global variables
dnl 8. System services
dnl
dnl Read the Autoconf manual for details.

AC_INIT()

AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(dbug,2.0.0)
AM_CONFIG_HEADER(config.h)

dnl
dnl Command line options
dnl


dnl Add compiler-specific optimization flags
AC_ARG_ENABLE(debug,
[  --enable-debug          Disable aggressive optimizations [default=no]],
              debug_enabled=yes, debug_enabled=no)

dnl Save $CFLAGS since AC_PROG_CC likes to insert "-g -O2"
dnl if $CFLAGS is blank
cflags_save="$CFLAGS"

AC_PROG_AWK
AC_PROG_MAKE_SET
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AM_PROG_LEX
AC_PROG_YACC 
		AC_PROG_RANLIB

CFLAGS="$cflags_save"


dnl
dnl Checks for headers
dnl
AC_HEADER_STDC
AC_CHECK_HEADERS(\
sys/types.h \
sys/ioctl.h \
sys/resource.h \
sys/select.h \
sys/socket.h \
sys/stat.h \
sys/sysctl.h \
sys/time.h \
sys/uio.h \
sys/un.h \
sys/wait.h \
arpa/inet.h \
netinet/in.h \
alloca.h \
assert.h \
ctype.h \
errno.h \
fcntl.h \
grp.h \
io.h \
libintl.h \
malloc.h \
memory.h \
netdb.h \
pthread.h \
pwd.h \
regex.h \
signal.h \
stdarg.h \
stddef.h \
stdint.h \
stdio.h \
stdlib.h \
string.h \
strings.h \
sysexits.h \
syslog.h \
time.h \
unistd.h \
wchar.h \
wctype.h \
)
AC_HEADER_TIME
AC_CHECK_HEADER(socks.h, socks_header=yes, socks_header=no)

dnl
dnl Checks for types
dnl
AM_C_PROTOTYPES
AC_C_CONST
AC_C_INLINE
AC_UNP_CHECK_TYPE(uint8_t, unsigned char)
AC_UNP_CHECK_TYPE(int16_t, short)
AC_UNP_CHECK_TYPE(uint16_t, unsigned short)
AC_UNP_CHECK_TYPE(int32_t, int)
AC_UNP_CHECK_TYPE(uint32_t, unsigned int)
AC_UNP_CHECK_TYPE(size_t, unsigned int)
AC_UNP_CHECK_TYPE(ssize_t, int)
AC_UNP_CHECK_TYPE(socklen_t, unsigned int)
AC_UNP_CHECK_TYPE(in_addr_t, uint32_t)
AC_TYPE_PID_T
AC_TYPE_SIGNAL

dnl
dnl Checks for functions
dnl
AC_FUNC_ALLOCA
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(\
ftruncate \
regexec \
select \
setrlimit \
socket \
strdup \
strerror \
strtol \
vsnprintf \
vsyslog \
)
AC_CHECK_FUNCS(strlcpy strlcat)

if test "$ac_cv_func_vprintf" != "yes"; then
    AC_CHECK_FUNC(_doprnt, AC_DEFINE(HAVE_DOPRNT))
fi

dnl
dnl Compiler characteristics
dnl

dnl Enable the debugging flags (by checking for the GCC compiler)
CFLAGS="-O2 $CFLAGS"
if test "$enable_debug" != "no" ; then
    dnl Add the warnings if we have the GCC compiler
    if test "$ac_cv_prog_gcc" = "yes" ; then
	CFLAGS="-pg -fprofile-arcs $CFLAGS"
        CFLAGS="-Wshadow -Wcast-qual -Wcast-align -Wstrict-prototypes $CFLAGS"
        CFLAGS="-Wmissing-prototypes -Wmissing-declarations $CFLAGS"
        CFLAGS="-Wpointer-arith -Waggregate-return -Wnested-externs $CFLAGS"
    fi
    CFLAGS="-Wall -g -DYYDEBUG $CFLAGS"
    YFLAGS="-v -d"
else
    dnl No debugging information, include the optimizations
    CFLAGS="-DDBUG_OFF $CFLAGS"
    YFLAGS="-d"
fi

dnl
dnl Make sure we can actually handle the "--with-*" and "--enable-*" stuff.
dnl

dnl Handle the SOCKS support
if test "$socks_enabled" = "yes"; then
    if test "$socks_header" = "yes" -a "$socks_library" = "yes"; then
        CFLAGS="-I/usr/include/sock.h -DSOCKS $CFLAGS"
        LIBS="-lsocks $LIBS"
    else
        AC_MSG_ERROR([Could not include the SOCKS library or header])
    fi
fi

		
		

		

dnl
dnl Substitute the variables into the various Makefiles
dnl
AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(YFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LIBS)
AC_SUBST(LIBOBJS)

AC_OUTPUT(Makefile src/Makefile)
